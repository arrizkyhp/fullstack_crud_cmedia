/* eslint-disable import/no-extraneous-dependencies */
import { Dialog, Transition } from '@headlessui/react';
import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { Fragment, useState } from 'react';
import { toast } from 'react-hot-toast';
import useSWR, { useSWRConfig } from 'swr';

import styles from '../common/styles/Home.module.scss';

export default function Home() {
  const [isOpen, setIsOpen] = useState<boolean>(false);
  const [selectedId, setSelectedId] = useState<number>(0);
  const { mutate } = useSWRConfig();
  const fetcher = async () => {
    const response = await axios.get('http://localhost:5000/products');
    return response.data;
  };

  const handleDelete = async () => {
    await axios.delete(`http://localhost:5000/products/${selectedId}`);
    mutate('products');
    toast.success('Data Succesfully Deleted');
    setIsOpen(false);
  };

  const { data } = useSWR('products', fetcher);

  const openModalDelete = (id: number) => {
    setSelectedId(id);
    setIsOpen(true);
  };

  const closeModalDelete = () => {
    setIsOpen(false);
    setSelectedId(0);
  };

  if (!data) return <h2>Loading....</h2>;

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>CRUD App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="flex flex-col mt-5">
          <div className="w-full">
            <Link
              href="/add"
              className="bg-green-500 hover:bg-green-700 border border-slate-200 text-white font-bold py-2 px-4 rounded-lg"
            >
              Add New{' '}
            </Link>
            <div className="relative shadow rounded-lg mt-3">
              <table className="w-full text-sm text-left text-grey-500">
                <thead className="text-xs text-gray-700 uppercase bg-gray-100">
                  <tr>
                    <th className="py-3 px-1 text-center">No</th>
                    <th className="py-3 px-6">Product Name</th>
                    <th className="py-3 px-6">Price</th>
                    <th className="py-3 px-1 text-center">Action</th>
                  </tr>
                </thead>
                <tbody>
                  {data.map(
                    (
                      product: { id: number; name: string; price: number },
                      index: number
                    ) => (
                      <tr key={product.id} className="bg-white border-b">
                        <td className="py-3 px-1 text-center">{index + 1}</td>
                        <td className="py-3 px-6 font-medium text-gray-900">
                          {product.name}
                        </td>
                        <td className="py-3 px-6">{product.price}</td>
                        <td className="py-3 px-1 text-center">
                          <Link
                            href={`/edit/${product.id}`}
                            className="font-medium bg-blue-400 hover:bg-blue-500 px-3 py-1 rounded text-white mr-1"
                          >
                            Edit
                          </Link>
                          <button
                            type="button"
                            // onClick={() => handleDelete(product.id)}
                            onClick={() => openModalDelete(product.id)}
                            className="font-medium bg-red-400 hover:bg-red-500 px-3 py-1 rounded text-white mr-1"
                          >
                            Delete
                          </button>
                        </td>
                      </tr>
                    )
                  )}
                </tbody>
              </table>
            </div>
          </div>
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                width={72}
                height={16}
              />
            </span>
          </a>
        </footer>
      </div>

      <Transition appear show={isOpen} as={Fragment}>
        <Dialog as="div" className="relative z-10" onClose={closeModalDelete}>
          <Transition.Child
            as={Fragment}
            enter="ease-out duration-300"
            enterFrom="opacity-0"
            enterTo="opacity-100"
            leave="ease-in duration-200"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          >
            <div className="fixed inset-0 bg-black bg-opacity-25" />
          </Transition.Child>

          <div className="fixed inset-0 overflow-y-auto">
            <div className="flex min-h-full items-center justify-center p-4 text-center">
              <Transition.Child
                as={Fragment}
                enter="ease-out duration-300"
                enterFrom="opacity-0 scale-95"
                enterTo="opacity-100 scale-100"
                leave="ease-in duration-200"
                leaveFrom="opacity-100 scale-100"
                leaveTo="opacity-0 scale-95"
              >
                <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all">
                  <Dialog.Title
                    as="h3"
                    className="text-lg font-medium leading-6 text-gray-900"
                  >
                    Delete Product
                  </Dialog.Title>
                  <div className="mt-2">
                    <p className="text-sm text-gray-500">
                      Are you sure you want to delete this product? This action
                      cannot be undone.
                    </p>
                  </div>

                  <div className="mt-4 flex gap-2">
                    <button
                      type="button"
                      className="inline-flex justify-center rounded-md border border-transparent bg-red-500 px-4 py-2 text-sm font-medium text-white hover:bg-red-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
                      onClick={() => handleDelete()}
                    >
                      Delete
                    </button>
                    <button
                      type="button"
                      className="inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
                      onClick={closeModalDelete}
                    >
                      Cancel
                    </button>
                  </div>
                </Dialog.Panel>
              </Transition.Child>
            </div>
          </div>
        </Dialog>
      </Transition>
    </>
  );
}
